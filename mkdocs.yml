site_name: ALCF User Guides
nav:
  - Home: index.md
  - Account and Project Management:
    - Accounts and Access: account-project-management/accounts-and-access/user-account-overview.md
    - Passcode Tokens: account-project-management/accounts-and-access/alcf-passcode-tokens.md
    - Accounts and Access FAQs: account-project-management/accounts-and-access/accounts-and-access-faqs.md
    - Project Management:
      - Starting Your ALCF Award: account-project-management/project-management/starting-alcf-award.md
      - Managing Your Team Members: account-project-management/project-management/team-management.md
      - Reporting: account-project-management/project-management/project-reports.md
    - Allocations:
      - Allocations on ALCF Computing Resources: account-project-management/allocation-management/overview.md
      - Managing Your Allocations: account-project-management/allocation-management/allocation-management.md
      - sbank Allocation Accounting System: account-project-management/allocation-management/sbank-allocation-accounting-system.md
  - Data Management:
    - ALCF Community Data Co-Op: data-management/acdc/acdc-overview.md
    - Sharing on Eagle Using Globus: data-management/acdc/eagle-data-sharing.md
    - Transferring Data to Eagle: data-management/acdc/transferring-data-to-eagle.md
    - Data Transfer:
      - SFTP and SCP: data-management/data-transfer/sftp-scp.md
      - Using Globus: data-management/data-transfer/using-globus.md
    - File System & Storage:
      - File Systems: data-management/filesystem-and-storage/file-systems.md
      - Data Storage: data-management/filesystem-and-storage/data-storage.md
      - HPSS: data-management/filesystem-and-storage/hpss.md
      - Disk Quota: data-management/filesystem-and-storage/disk-quota.md
  - Services: # services/index.md  # Cant directly link to this in the nav sidebar, since it is a dropdown. Only linked to in base docs/index.md
    - JupyterHub: services/jupyter-hub.md
    - Continuous Integration:
      - General: services/continuous-integration.md
      - Jenkins: services/jenkins.md
      - Gitlab-CI: services/gitlab-ci.md
  - Running Jobs with PBS at the ALCF:
      - Job Scheduling and Execution: running-jobs/job-and-queue-scheduling.md
      - Example Job Scripts: running-jobs/example-job-scripts.md
      - Machine Reservations: running-jobs/machine-reservations-polaris.md
      - Cobalt to PBS option Comparison: running-jobs/pbs-qsub-options-table.md
  - Polaris:
    - Getting Started: polaris/getting-started.md
    - Known Issues: polaris/known-issues.md
    - Hardware Overview:
      - Polaris Machine Overview: polaris/hardware-overview/machine-overview.md
    - Compiling and Linking:
      - Compiling and Linking Overview: polaris/compiling-and-linking/compiling-and-linking-overview.md
      - Programming Models: polaris/compiling-and-linking/polaris-programming-models.md
      - Example Program and Makefile: polaris/compiling-and-linking/polaris-example-program-makefile.md
      - CCE Compilers: polaris/compiling-and-linking/cce-compilers-polaris.md
      - GNU Compilers: polaris/compiling-and-linking/gnu-compilers-polaris.md
      - NVIDIA Compilers: polaris/compiling-and-linking/nvidia-compiler-polaris.md
      - LLVM Compilers: polaris/compiling-and-linking/llvm-compilers-polaris.md
    - Build Tools:
        - CMake: polaris/build-tools/cmake-polaris.md
    - Running Jobs: polaris/running-jobs.md
    - Applications and Libraries:
        - Applications:
            - GROMACS: polaris/applications-and-libraries/applications/gromacs.md
            - LAMMPS: polaris/applications-and-libraries/applications/lammps.md
            - OpenMM: polaris/applications-and-libraries/applications/openmm.md
            - VASP: polaris/applications-and-libraries/applications/vasp.md
        - Libraries:
            - Math Libraries: polaris/applications-and-libraries/libraries/math-libraries.md
            - Cabana: polaris/applications-and-libraries/libraries/cabana-polaris.md
    - Data Science:
        - Python: polaris/data-science-workflows/python.md
        - Containers: polaris/data-science-workflows/containers/containers.md
        - Frameworks:
            - TensorFlow: polaris/data-science-workflows/frameworks/tensorflow.md
            - PyTorch: polaris/data-science-workflows/frameworks/pytorch.md
            - Jax: polaris/data-science-workflows/frameworks/jax.md
            - DeepSpeed: polaris/data-science-workflows/frameworks/deepspeed.md
        - Applications:
            - gpt-neox: polaris/data-science-workflows/applications/gpt-neox.md
    - Programming Models:
        - OpenMP: polaris/programming-models/openmp-polaris.md
        - SYCL: polaris/programming-models/sycl-polaris.md
        - Kokkos: polaris/programming-models/kokkos-polaris.md
    - Debugging Tools:
        - CUDA-GDB: polaris/debugging-tools/CUDA-GDB.md
    - Performance Tools:
        - NVIDIA-Nsight: polaris/performance-tools/NVIDIA-Nsight.md
    - Visualization:
        - Paraview: polaris/visualization/paraview.md
    - Workflows:
        - Balsam: polaris/workflows/balsam.md
        - Parsl: polaris/workflows/parsl.md
        - libEnsemble: polaris/workflows/libensemble.md
  - Theta:
    - Hardware Overview:
      - Theta Machine Overview: theta/hardware-overview/machine-overview.md
      - Theta Memory Modes: theta/hardware-overview/theta-memory-modes.md
      - Aries Network: theta/hardware-overview/aries-network.md
    - Compiling And Linking:
      - Compiling and Linking Overview: theta/compiling-and-linking/compiling-and-linking-overview.md
      - Library and Compiler Tracking: theta/compiling-and-linking/theta-library-compiler-tracking-overview.md
      - Example Program and Makefile: theta/compiling-and-linking/theta-example-program-makefile.md
      - Clang Compiler: theta/compiling-and-linking/clang-compiler-theta.md
    - Queueing and Running Jobs on Theta:
      - The Gronkulator (Job Status Display): theta/queueing-and-running-jobs/gronkulator.md
      - Job and Queue Scheduling: theta/queueing-and-running-jobs/job-and-queue-scheduling.md
      - Example Job Scripts: theta/queueing-and-running-jobs/example-job-scripts.md
      - Machine Reservations: theta/queueing-and-running-jobs/machine-reservations.md
      - Affinity on Theta: theta/queueing-and-running-jobs/affinity-theta.md
    - Applications and Libraries:
      - Applications:
        - ELPA: theta/applications-and-libraries/applications/elpa.md
        - Gromacs: theta/applications-and-libraries/applications/gromacs.md
        - LAMMPS: theta/applications-and-libraries/applications/lammps.md
        - NAMD: theta/applications-and-libraries/applications/namd.md
        - NwChem: theta/applications-and-libraries/applications/nwchem.md
        - QMCPack: theta/applications-and-libraries/applications/qmcpack.md
        - QBox: theta/applications-and-libraries/applications/qbox.md
        - Quantum Espresso: theta/applications-and-libraries/applications/quantum-espresso.md
        - Quantum Package: theta/applications-and-libraries/applications/quantum-package.md
        - VASP: theta/applications-and-libraries/applications/vasp.md
        - WEST: theta/applications-and-libraries/applications/west.md
      - Libraries:
        - Boost: theta/applications-and-libraries/libraries/boost.md
        - Spack: theta/applications-and-libraries/libraries/spack.md
      - Visualization:
        - Remote Visualization Using VNC: theta/applications-and-libraries/visualization/remote-vis.md
    - Data Science:
      - Machine Learning Tools: theta/data-science-workflows/machine-learning-tools.md
      - Data Science Modules: theta/data-science-workflows/data-science-modules.md
      - Apache Spark: theta/data-science-workflows/apache-spark.md
      - Balsam: theta/data-science-workflows/balsam.md
      - Conda: theta/data-science-workflows/conda.md
      - DeepHyper: theta/data-science-workflows/deephyper.md
      - Distributed Learning with Horovod: theta/data-science-workflows/distributed-learning-horovod.md
      - HDF5: theta/data-science-workflows/hdf5.md
      - Keras: theta/data-science-workflows/keras.md
      - MongoDB: theta/data-science-workflows/mongo-db.md
      - PostgreSQL and SQLite: theta/data-science-workflows/postgre-sql-lite.md
      - PyTorch: theta/data-science-workflows/pytorch.md
      - Containers: theta/data-science-workflows/containers/containers.md
      - TensorFlow: theta/data-science-workflows/tensorflow.md
    - Programming Models:
      - Kokkos: theta/programming-models/kokkos.md
      - MPI: theta/programming-models/mpi-on-theta.md
      - OpenMP: theta/programming-models/openmp-theta.md
      - Raja: theta/programming-models/raja.md
    - Debugging Tools:
      - Arm DDT: theta/debugging-tools/arm-ddt.md
      - ATP and STAT: theta/debugging-tools/atp-and-stat.md
      - GDB: theta/debugging-tools/gdb.md
    - Performance Tools:
      - Arm MAP: theta/performance-tools/arm-map.md
      - CrayPat: theta/performance-tools/craypat.md
      - Darshan: theta/performance-tools/darshan.md
      - HPCToolkit: theta/performance-tools/hpctoolkit.md
      - Intel Advisor: theta/performance-tools/intel-advisor.md
      - Intel Vtune: theta/performance-tools/intel-vtune.md
      - PAPI: theta/performance-tools/papi.md
      - TAU: theta/performance-tools/tau.md
  - ThetaGPU:
    - Getting Started: theta-gpu/getting-started.md
    - Hardware Overview:
      - ThetaGPU Machine Overview: theta-gpu/hardware-overview/theta-gpu-machine-overview.md
    - Compiling And Linking:
      - Compiling and Linking Overview: theta-gpu/compiling-and-linking/compiling-and-linking-overview.md
      - Continuous Integration: theta-gpu/compiling-and-linking/continuous-integration.md
    - Queueing and Running Jobs on ThetaGPU:
      - Job and Queue Scheduling: theta-gpu/queueing-and-running-jobs/job-and-queue-scheduling.md
      - Machine Reservations: theta/queueing-and-running-jobs/machine-reservations.md
    - Applications and Libraries:
      - Applications:
        - Gromacs: theta-gpu/applications-and-libraries/applications/gromacs.md
    - Data Science:
      - Data Science Software Availability: theta-gpu/data-science-workflows/data-science-software-availability.md
      - Building Python Packages: theta-gpu/data-science-workflows/building-python-packages.md
      - GPU Monitoring: theta-gpu/data-science-workflows/gpu-monitoring.md
      - GPU Node Queue and Policy: theta-gpu/data-science-workflows/gpu-node-queue-and-policy.md
      - Python/C++ Code Interoperability: theta-gpu/data-science-workflows/pythonc-code-interoperability.md
      - Containers: theta-gpu/data-science-workflows/containers/containers.md
      - Deep Learning Frameworks:
        - Distributed Training on ThetaGPU Using Data Parallelism: theta-gpu/data-science-workflows/dl-frameworks/distributed-training-using-data-parallelism.md
        - DeepSpeed on ThetaGPU: theta-gpu/data-science-workflows/dl-frameworks/deepspeed.md
        - Running PyTorch with Conda: theta-gpu/data-science-workflows/dl-frameworks/running-pytorch-conda.md
        - Running TensorFlow with Conda: theta-gpu/data-science-workflows/dl-frameworks/running-tensorflow-conda.md
        - TensorBoard Instructions: theta-gpu/data-science-workflows/dl-frameworks/tensorboard-instructions.md
    - Programming Models:
      - Kokkos: theta-gpu/programming-models/kokkos.md
      - OpenMP: theta-gpu/programming-models/openmp.md
      - Raja: theta-gpu/programming-models/raja.md
    - Performance Tools:
      - Darshan: theta-gpu/performance-tools/darshan.md
      - NVIDIA Nsight: theta-gpu/performance-tools/nvidia-nsight.md
  - AI Testbed:
    - Getting Started: ai-testbed/index.md
    - Cerebras:
      - System Overview: ai-testbed/cerebras/system-overview.md
      - Getting Started: ai-testbed/cerebras/getting-started.md
      - Running a Model/Program: ai-testbed/cerebras/running-a-model-or-program.md
      - Job Queuing and Submission: ai-testbed/cerebras/job-queuing-and-submission.md
      - Example Programs: ai-testbed/cerebras/example-programs.md
      - Customizing Environments: ai-testbed/cerebras/customizing-environment.md
      #- Performance Tools: ai-testbed/cerebras/performance-tools.md
      - Tunneling and Forwarding Ports: ai-testbed/cerebras/tunneling-and-forwarding-ports.md
      - Miscellaneous: ai-testbed/cerebras/miscellaneous.md
    - SambaNova Gen1:
      - System Overview: ai-testbed/sambanova_gen1/system-overview.md
      - Getting Started: ai-testbed/sambanova_gen1/getting-started.md
      - Virtual Environment: ai-testbed/sambanova_gen1/virtual-environment.md
      - Steps to Run a Model/Program: ai-testbed/sambanova_gen1/running-a-model-or-program.md
      - Job Queuing and Submission: ai-testbed/sambanova_gen1/job-queuing-and-submission.md
      - Example Programs: ai-testbed/sambanova_gen1/example-programs.md
      - Example Multi-Node Programs: ai-testbed/sambanova_gen1/example-multi-node-programs.md
      - Steps to Run BERT Large on Sambanova DataScale SN10-8R: ai-testbed/sambanova_gen1/running-bert-large-on-sn10-8r.md
      - Tunneling and Forwarding Ports: ai-testbed/sambanova_gen1/tunneling-and-forwarding-ports.md
      #- DataParallel: ai-testbed/sambanova_gen1/DataParallel.md
      - Miscellaneous: ai-testbed/sambanova_gen1/miscellaneous.md
      - SambaNova Documentation: ai-testbed/sambanova_gen1/documentation.md
    - SambaNova Gen2:
      - System Overview: ai-testbed/sambanova_gen2/system-overview.md
      - Getting Started: ai-testbed/sambanova_gen2/getting-started.md
      - Virtual Environment: ai-testbed/sambanova_gen2/virtual-environment.md
      - Running a Model/Program: ai-testbed/sambanova_gen2/running-a-model-or-program.md
      - Job Queuing and Submission: ai-testbed/sambanova_gen2/job-queuing-and-submission.md
      - Example Programs: ai-testbed/sambanova_gen2/example-programs.md
      - Example Multi-Node Programs: ai-testbed/sambanova_gen2/example-multi-node-programs.md
      # - Running BERT Large on Sambanova DataScale SN30-8: ai-testbed/sambanova_gen2/running-bert-large-on-sn30.md
      - Tunneling and Forwarding Ports: ai-testbed/sambanova_gen2/tunneling-and-forwarding-ports.md
      - Miscellaneous: ai-testbed/sambanova_gen2/miscellaneous.md
      - SambaNova Documentation: ai-testbed/sambanova_gen2/documentation.md
      - Performance Tools: ai-testbed/sambanova_gen2/performance-tools.md
    - Data Management: ai-testbed/data-management/data-management-overview.md
  - Cooley:
    - Hardware Overview:
      - Cooley Machine Overview: cooley/cooley-overview.md
    - Compiling And Linking:
      - Compiling and Linking Overview: cooley/compiling-and-linking/compiling-and-linking.md
    - Queueing and Running Jobs:
      - Job and Queue Scheduling: cooley/job-submission/job-and-queue-scheduling.md
    - Software and Libraries:
      - Jupyter Notebooks: cooley/software-and-libraries/jupyter-notebooks.md
      - Machine Learning Tools: cooley/software-and-libraries/machine-learning-tools.md
      - ParaView: cooley/software-and-libraries/paraview.md
      - ParaView Tutorial: cooley/software-and-libraries/paraview-tutorial.md
      - Singularity on Cooley: cooley/software-and-libraries/singularity-cooley.md
      - Visit on Cooley: cooley/software-and-libraries/visit-on-cooley.md
    - Programming Models:
      - Kokkos: cooley/programming-models/kokkos.md
      - OpenCL: cooley/programming-models/opencl.md
      - OpenMP: cooley/programming-models/openmp.md
      - Raja: cooley/programming-models/raja.md
    - Performance Tools:
      - Darshan: cooley/performance-tools/darshan.md
      - Remote Visualization Using VNC: cooley/performance-tools/remote-visualization-using-vnc.md
  - Aurora/Sunspot: https://www.alcf.anl.gov/support-center/aurora-sunspot
  - Facility Policies:
    - Overview of Policies: policies/facility-policies.md
    - ALCF Acknowledgement Policy: policies/alcf-acknowledgement-policy.md
    - Account Policies:
      - Accounts Policy: policies/accounts/accounts-policy.md
      - Account Sponsorship & Retention Policy: policies/accounts/account-sponsorship-retention-policy.md
      - User Authentication Policy: policies/accounts/user-authentication-policy.md
    - Queue and Scheduling Policies:
      - Queue and Scheduling Policy: policies/queue-scheduling/queue-and-scheduling-policy.md
      - Refund Policy: policies/queue-scheduling/refund-policy.md
      - Pullback Policy: policies/queue-scheduling/pullback-policy.md
    - Data and Software Policies:
      - Data Policy: policies/data-and-software-policies/data-policy.md
      - Software Policy: policies/data-and-software-policies/software-policy.md

theme:
  name: 'material'
  custom_dir: overrides
  language: 'en'
  palette:
    scheme: alcf
  font:
    text: proxima-nova
  features:
    - tabs
    - instant
    - search.highlight
    - search.suggest
  logo: 'images/Argonne_wireframe_white_transparent.png'
  favicon: 'images/alcf_favicon.ico'

extra_css:
  - stylesheets/alcf-extra.css

extra_javascript:
  - javascripts/alcf-extra.js

markdown_extensions:
  - footnotes
  - admonition
  - codehilite
  - tables
  - attr_list
  - md_in_html
  - def_list
  - pymdownx.critic
  - pymdownx.inlinehilite
  - pymdownx.keys
  - pymdownx.caret
  - pymdownx.mark
  - pymdownx.tilde
  - pymdownx.snippets:
      base_path: ["."]  # for root of repo, default since that is where mkdocs.yml is
      # base_path: ["docs"]
      dedent_subsections: True  # experimental; new in 9.10 (2023-03-05)
      check_paths: True
      url_download: True
  - pymdownx.superfences
  - pymdownx.details
  - pymdownx.inlinehilite
  - pymdownx.highlight:
      use_pygments: true
      anchor_linenums: true
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.tasklist:
      custom_checkbox: true


repo_name: 'argonne-lcf/alcf-userguide'
repo_url: 'https://github.com/argonne-lcf/alcf-userguide'
site_url: 'https://docs.alcf.anl.gov/'

extra:
  social:
    - icon: 'fontawesome/brands/github-alt'
      link: 'https://github.com/argonne-lcf/alcf-userguide'

plugins:
  - include-markdown
  - codeinclude:
      title_mode: pymdownx.tabbed
  - search:
      lang: en
